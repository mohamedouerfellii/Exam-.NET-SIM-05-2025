// <auto-generated />
using System;
using Examen.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Examen.Infrastructure.Migrations
{
    [DbContext(typeof(EXContext))]
    partial class EXContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Course", b =>
                {
                    b.Property<int>("CoursetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CoursetId"));

                    b.Property<DateTime>("DateCourse")
                        .HasColumnType("datetime2");

                    b.Property<string>("Lieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomCourse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PisteFk")
                        .HasColumnType("int");

                    b.HasKey("CoursetId");

                    b.HasIndex("PisteFk");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Participation", b =>
                {
                    b.Property<int>("RobotFk")
                        .HasColumnType("int");

                    b.Property<int>("CourseFk")
                        .HasColumnType("int");

                    b.Property<float>("Duree")
                        .HasColumnType("real");

                    b.Property<int>("PositionFinale")
                        .HasColumnType("int");

                    b.HasKey("RobotFk", "CourseFk");

                    b.HasIndex("CourseFk");

                    b.ToTable("Participations");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Piste", b =>
                {
                    b.Property<int>("PisteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PisteId"));

                    b.Property<double>("LongueurMetres")
                        .HasColumnType("float");

                    b.Property<int>("NbrObstacles")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PisteId");

                    b.ToTable("Pistes");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Robot", b =>
                {
                    b.Property<int>("RobotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RobotId"));

                    b.Property<DateTime>("DateFabrication")
                        .HasColumnType("datetime2");

                    b.Property<string>("Marque")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("PoidsKg")
                        .HasColumnType("float");

                    b.Property<int>("Statut")
                        .HasColumnType("int");

                    b.Property<double>("VitesseMax")
                        .HasColumnType("float");

                    b.HasKey("RobotId");

                    b.ToTable("Robots");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Course", b =>
                {
                    b.HasOne("Examen.ApplicationCore.Domain.Piste", "Piste")
                        .WithMany("Courses")
                        .HasForeignKey("PisteFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Piste");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Participation", b =>
                {
                    b.HasOne("Examen.ApplicationCore.Domain.Course", "Course")
                        .WithMany("Participations")
                        .HasForeignKey("CourseFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Examen.ApplicationCore.Domain.Robot", "Robot")
                        .WithMany("Participations")
                        .HasForeignKey("RobotFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Robot");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Course", b =>
                {
                    b.Navigation("Participations");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Piste", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Robot", b =>
                {
                    b.Navigation("Participations");
                });
#pragma warning restore 612, 618
        }
    }
}
